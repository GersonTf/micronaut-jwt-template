openapi: 3.0.1
info:
  title: fire-ultimate
  description: "API for fire ultimate, achieve financial freedom."
  contact:
    name: Gerson
    email: gerson.tf.trujillo@gmail.com
  version: "0.0"
servers:
- url: http://localhost:8080
security:
- bearerAuth: []
paths:
  /:
    get:
      operationId: index
      responses:
        "200":
          description: index 200 response
          content:
            text/plain:
              schema:
                type: string
  /expenses/category:
    get:
      operationId: list
      responses:
        "200":
          description: list 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExpenseCategory'
    put:
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              required:
              - expenseCategory
              type: object
              properties:
                expenseCategory:
                  $ref: '#/components/schemas/ExpenseCategory'
        required: true
      responses:
        "200":
          description: update 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
    post:
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              required:
              - expenseCategory
              type: object
              properties:
                expenseCategory:
                  $ref: '#/components/schemas/ExpenseCategory'
        required: true
      responses:
        "201":
          description: save 201 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
  /expenses/category/{id}:
    get:
      operationId: find
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: find 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategory'
  /fruits:
    get:
      summary: List fruits
      operationId: list_1
      responses:
        "200":
          description: list_1 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fruit'
    put:
      summary: Update fruit
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - fruit
              type: object
              properties:
                fruit:
                  $ref: '#/components/schemas/Fruit'
        required: true
      responses:
        "200":
          description: update_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
    post:
      summary: Create new fruit
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - fruit
              type: object
              properties:
                fruit:
                  $ref: '#/components/schemas/Fruit'
        required: true
      responses:
        "201":
          description: save_1 201 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
  /fruits/q:
    get:
      summary: Find fruit by name
      operationId: query
      parameters:
      - name: names
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: query 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fruit'
  /fruits/{id}:
    get:
      summary: Find fruit by id
      operationId: find_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: find_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fruit'
  /health:
    get:
      summary: Health check
      operationId: index_1
      responses:
        "200":
          description: index_1 200 response
          content:
            text/plain:
              schema:
                type: string
  /login:
    post:
      summary: Logs a user in
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              required:
              - password
              - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
components:
  schemas:
    ExpenseCategory:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        name:
          minLength: 1
          type: string
        total:
          type: number
          nullable: true
        yearTotal:
          type: number
          nullable: true
        monthTotal:
          type: number
          nullable: true
        children:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ExpenseCategory'
    Fruit:
      required:
      - name
      type: object
      properties:
        id:
          type: string
        name:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
